/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applet;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JApplet;
import jms.MessageReceiver;

/**
 *
 * @author mse
 */
public abstract class ViewerApplet extends JApplet {

    /**
     * Initialization method that will be called after the applet is loaded into
     * the browser.
     */
    final public void init() {
        /* Set the Nimbus look and feel 
         * <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.resource.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserEntityViewerApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserEntityViewerApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserEntityViewerApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserEntityViewerApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();

                    try {
                        setup();
                    } catch (IOException ex) {
                        Logger.getLogger(UserEntityViewerApplet.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            MessageReceiver mr = new MessageReceiver();
            mr.setApplet(this);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane1.setViewportView(textarea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     *  Gets initial informaiton from the URL to be
     *  displayed in the Applet's textArea
     * @throws MalformedURLException
     * @throws IOException 
     */
    final void setup() throws MalformedURLException, IOException {
        URL resource = new URL(getURL());
        BufferedReader in = new BufferedReader(
                new InputStreamReader(resource.openStream()));

        String inputLine;
        textarea.setText("");
        while ((inputLine = in.readLine()) != null) {
            textarea.append(inputLine + "\n");
        }
        in.close();
    }



    /**
     * Refreshes the applet by fetching new data from the URL
     * if the updated information is relevant to the applet
     * 
     * @param entityName
     * @param entityCommand
     * @throws MalformedURLException
     * @throws IOException 
     */
    final public void refresh(String entityName, String entityCommand)
            throws MalformedURLException, IOException 
    {
        if (entityName.equals(getService()) && 
            entityCommand.equals(getCommand())) 
        {    
            URL resource = new URL(getURL());
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(resource.openStream()));

            String inputLine;
            textarea.setText("");
            while ((inputLine = in.readLine()) != null) {
                textarea.append(inputLine + "\n");
            }
            in.close();
        }
    }

    abstract public String getURL();

    abstract public String getService();

    abstract public String getCommand();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textarea;
    // End of variables declaration//GEN-END:variables

}
